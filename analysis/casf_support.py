"""
platform: win
env: any
name: casf_support.py
create scoring function(e.g. ECIF) result table that fits CASF evaluation
"""
from config import casf_core_set, ecif_example, ecif_data_dir
from DatasetMng.IndexMng import get_index_from_dir
import pickle
import pandas as pd
import os


def query_described_value(qid):
    """
    get the descriptor values by query id
    :param qid: query id
    :return: descriptor value
    """
    ecif_data = pd.read_csv(os.path.join(ecif_data_dir, 'ECIF_6.0.csv'), comment='#')
    ld_data = pd.read_csv(os.path.join(ecif_data_dir, 'RDKit_Descriptors.csv'), comment='#')
    ecif_cut = ecif_data[ecif_data['PDB'] == qid].iloc[:, 1:]
    ld_cut = ld_data[ld_data['PDB'] == qid].iloc[:, 1:]
    return ecif_cut.join(ld_cut)


def create_ecif_coreset_result(model):
    """
    create ECIF result table that fits CASF evaluation
    :param model: specific model generated by autogluon
    :return:
    """
    core_ids = get_index_from_dir(casf_core_set)
    predicted = []
    model = pickle.load(open(model, 'rb'))
    for i in core_ids:
        predicted.append(model.predict(query_described_value(i))[0])
    ret = pd.DataFrame({"#code": core_ids, "score": predicted}, columns=["#code", "score"])
    ret.to_csv("ecif.dat", index=False)


if __name__ == '__main__':
    create_ecif_coreset_result(ecif_example)
